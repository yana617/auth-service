openapi: 3.0.0
info:
  title: API
  version: 0.0.1
servers:
  - url: http://localhost:1081/
    description: Development
  - url: https://auth-service.dogcatbmpz.by/
    description: Production
tags:
- name: Auth
  description: Authorization
- name: Users
  description: All about users
- name: Additional fields templates
  description: CRUD for additional fields templates
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
      - "Auth"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
      responses:
        '201':
          description: Test description
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/RegisterBody'
        '400':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                error: 'Fields are required'
  /auth/login:
    post:
      summary: Login with existing user
      tags:
      - "Auth"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: You are successfully logged in
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                error: 'Fields are required'
  /users/{userId}:
    get:
      summary: Get user information
      tags:
      - "Users"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user to return [ONLY YOURS]"
        required: true
        type: string
      responses:
        '200':
          description: Returns user info
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '403':
          description: Forbidden error while trying to get someone else's profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                error: 'Forbidden'
  /users:
    get:
      summary: Get users
      tags:
      - "Users"
      parameters:
      - name: search
        in: query
        description: text to search
        required: false
        type: string
      - name: order
        in: query
        description: Sort order
        required: false
        schema:
          type: string
          enum: [asc, desc]
      - name: sortBy
        in: query
        description: sort by which field
        required: false
        schema:
          type: string
          enum: [name, surname, phone]
      - name: limit
        in: query
        description: count of users to return
        required: false
        type: number
      - name: skip
        in: query
        description: records to skip
        required: false
        type: number
      responses:
        '200':
          description: Returns users
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /additional-field-templates:
    get:
      summary: Get all additional field templates
      tags:
      - "Additional fields templates"
      responses:
        '200':
          description: Returns all additional field templates
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdditionalFieldTemplate'
    post:
      summary: Create new additional field template
      tags:
      - "Additional fields templates"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  required: true
                description:
                  type: string
                  required: true
                icon:
                  type: string
                  required: false
      responses:
        '200':
          description: Returns created additional field template and set false to all users
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AdditionalFieldTemplate'
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /additional-field-templates/{aftId}:
    put:
      summary: Update existing additional field template
      tags:
      - "Additional fields templates"
      parameters:
      - name: "aftId"
        in: "path"
        description: "ID of additional field template to update"
        required: true
        type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  required: true
                description:
                  type: string
                  required: true
                icon:
                  type: string
                  required: false
      responses:
        '200':
          description: Returns updated additional field template
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AdditionalFieldTemplate'
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Additional field template is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete existing additional field template
      tags:
      - "Additional fields templates"
      parameters:
      - name: "aftId"
        in: "path"
        description: "ID of additional field template to delete"
        required: true
        type: string
      responses:
        '200':
          description: Successfully deleted
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
components:
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error:
          type: string
    ValidationError:
      type: object
      properties:
        success:
          type: boolean
          default: false
        errors:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              msg:
                type: string
              param:
                type: string
              location: 
                type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        surname:
          type: string
        phone:
          type: string
        email:
          type: string
    RegisterUserAdditionalField:
      type: object
      properties:
        additional_field_template_id:
          type: string
        value:
          type: boolean
    RegisterBody:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        phone:
          type: string
        email:
          type: string
        password:
          type: string
        additional_fields:
          type: array
          items:
            $ref: '#/components/schemas/RegisterUserAdditionalField'
    UserCredentials:
      type: object
      properties:
        email:
          type: string
          example: test@test.com
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        phone:
          type: string
        email:
          type: string
        token:
          type: string
    AdditionalFieldTemplate:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        description:
          type: string
        icon:
          type: string